{
  "contributors": {{ cookiecutter.authors.list|jsonify }},
  "license": "MIT",
  "name": "{{ cookiecutter.directory_name }}",
  "prettier": {
    "endOfLine": "lf",
    "iniSpaceAroundEquals": true,
    "printWidth": 100,
    "singleQuote": true
  },
  "repository": "git@github.com:{{ cookiecutter.github_username }}/{{ cookiecutter.repository_name }}.git",
  "scripts": {
    "check-formatting": "prettier -c '.*/**/*.json' '.*/**/*.y*ml' './**/*.md' './**/*.toml' './**/*.y*ml' ./.prettierrc && poetry run isort . --check && poetry run yapf -rd {{ cookiecutter.directory_name }} .stubs tests",
    "check-spelling": "cspell --no-progress .",
    "clean-dict": "r=(); while IFS=$\\n read -r w; do ! rg --no-config -qi. -g '!.vscode/dictionary.txt' -m 1 \"$w\" . && r+=(\"$w\"); done < ./.vscode/dictionary.txt; j=$(printf \"|%s\" \"${r[@]}\"); j=\"^(${j:1})$\"; grep -Ev \"${j}\" ./.vscode/dictionary.txt > new && mv new ./.vscode/dictionary.txt",
    "fix-pluggy": "touch \"$(poetry run python -c 'import inspect, os, pluggy; print(os.path.dirname(inspect.getabsfile(pluggy)))')/py.typed\"",
    "format": "prettier -w '.*/**/*.json' '.*/**/*.y*ml' './**/*.md' './**/*.toml' './**/*.y*ml' ./.prettierrc && poetry run isort . && poetry run yapf -ri {{ cookiecutter.directory_name }} .stubs tests",
    "mypy": "yarn fix-pluggy && poetry run mypy .",
    "pylint": "poetry run pylint {{ cookiecutter.directory_name }} docs tests",
    "qa": "yarn mypy && yarn pylint && yarn check-spelling && yarn check-formatting",
    "test": "poetry run pytest"
  },
  "version": "0.0.1"
}
