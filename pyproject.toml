[tool.poetry]
authors = ["Andrew Udvare <audvare@gmail.com>"]
description = "My template."
license = "MIT"
name = "cookiecutter-python-project"
packages = [{ include = "check_project.py" }]
readme = "README.md"
version = "0.0.1"

[tool.poetry.dependencies]
python = ">=3.10,<4"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
click = "^8.1.7"
deepdiff = "^6.6.0"
isort = "^5.12.0"
mypy = "^1.6.0"
rope = "^1.10.0"
ruff = "^0.0.292"
toml = "^0.10.2"
types-requests = "^2.31.0.9"
types-toml = "^0.10.8.7"
typing-extensions = "^4.8.0"
yapf = ">=0.33,<0.41"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
docutils = "^0.20.1"
esbonio = "^0.16.2"
sphinx = "^7.2.6"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.poetry.scripts]
check-project = "check_project:main"

[tool.isort]
case_sensitive = true
combine_as_imports = true
from_first = true
line_length = 100
order_by_type = true
use_parentheses = true

[tool.mypy]
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_untyped_decorators = true
disallow_subclassing_any = true
mypy_path = "./.stubs"
show_column_numbers = true
show_error_codes = true
strict_equality = true
strict_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true

[tool.ruff]
cache-dir = "~/.cache/ruff"
extend-ignore = ["PTH123", "T201", "TD002", "TD003", "TD004"]
namespace-packages = ["hooks"]
extend-select = [
  "A",
  "ASYNC",
  "B",
  "C4",
  "DTZ",
  "ERA",
  "EXE",
  "G",
  "INP",
  "INT",
  "ISC001",
  "ISC003",
  "NPY",
  "PD",
  "PERF",
  "PGH",
  "PIE",
  "PLC0105",
  "PLC0131",
  "PLC0132",
  "PLC0205",
  "PLC0208",
  "PLC0414",
  "PLC3002",
  "PLE0100",
  "PLE0101",
  "PLE0116",
  "PLE0117",
  "PLE0118",
  "PLE0241",
  "PLE0302",
  "PLE0307",
  "PLE0604",
  "PLE0605",
  "PLE1142",
  "PLE1205",
  "PLE1206",
  "PLE1300",
  "PLE1307",
  "PLE1310",
  "PLE1507",
  "PLE1700",
  "PLE2502",
  "PLE2510",
  "PLE2512",
  "PLE2513",
  "PLE2514",
  "PLE2515",
  "PLR0124",
  "PLR0133",
  "PLR0206",
  "PLR0402",
  "PLR1701",
  "PLR1711",
  "PLR1714",
  "PLR1722",
  "PLR2004",
  "PLR5501",
  "PLW0120",
  "PLW0127",
  "PLW0129",
  "PLW0131",
  "PLW0406",
  "PLW0602",
  "PLW0603",
  "PLW0711",
  "PLW1508",
  "PLW1509",
  "PLW1510",
  "PLW2901",
  "PLW3301",
  "PT",
  "PTH",
  "PYI",
  "Q",
  "RET",
  "RSE",
  "S506",
  "S602",
  "SIM",
  "SLF",
  "SLOT",
  "T20",
  "TCH",
  "TD",
  "TRY",
  "YTT",
  "RUF200"
]
line-length = 100
target-version = "py311"

[tool.ruff.flake8-quotes]
inline-quotes = "single"
multiline-quotes = "single"

[tool.yapf]
align_closing_bracket_with_visual_indent = true
allow_multiline_dictionary_keys = false
allow_multiline_lambdas = false
allow_split_before_dict_value = true
blank_line_before_class_docstring = false
blank_line_before_module_docstring = false
blank_line_before_nested_class_or_def = false
blank_lines_around_top_level_definition = 2
coalesce_brackets = true
column_limit = 100
continuation_align_style = "SPACE"
continuation_indent_width = 4
dedent_closing_brackets = false
disable_ending_comma_heuristic = false
each_dict_entry_on_separate_line = true
indent_dictionary_value = true
indent_width = 4
join_multiple_lines = true
no_spaces_around_selected_binary_operators = false
space_between_ending_comma_and_closing_bracket = false
spaces_around_default_or_named_assign = false
spaces_around_power_operator = true
spaces_before_comment = 2
split_all_comma_separated_values = false
split_arguments_when_comma_terminated = false
split_before_bitwise_operator = true
split_before_closing_bracket = true
split_before_dict_set_generator = true
split_before_dot = false
split_before_expression_after_opening_paren = false
split_before_first_argument = false
split_before_logical_operator = true
split_before_named_assigns = true
split_complex_comprehension = false
split_penalty_after_opening_bracket = 30
split_penalty_after_unary_operator = 10000
split_penalty_before_if_expr = 0
split_penalty_bitwise_operator = 300
split_penalty_comprehension = 80
split_penalty_excess_character = 7000
split_penalty_for_added_line_split = 30
split_penalty_import_names = 0
split_penalty_logical_operator = 300
use_tabs = false

[tool.yapfignore]
ignore_patterns = ["node_modules/**"]
